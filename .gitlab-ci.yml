image: docker:git

variables:
  # NOTE: full path: mender/<version>/dist-packages/debian/<arch>/mender-client_<version>-1_<arch>.deb
  S3_BUCKET_NAME: "mender"
  S3_BUCKET_SUBPATH: "dist-packages/debian"

stages:
  - build
  - test
  # - publish

build:
  stage: build
  services:
    - docker:dind
  script:
    - docker build --tag=mender-dist-packages-builder .
    - mkdir output
    - docker run -v $(pwd)/output:/output --rm mender-dist-packages-builder
  artifacts:
    paths:
      - output/*

test:format:
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - apk add --no-cache bash perl-utils
    # Rename the branch we're on, so that it's not in the way for the
    # subsequent fetch. It's ok if this fails, it just means we're not on any
    # branch.
    - git branch -m temp-branch || true
    # Git trick: Fetch directly into our local branches instead of remote
    # branches.
    - git fetch origin 'refs/heads/*:refs/heads/*'
    # Get last remaining tags, if any.
    - git fetch --tags origin
    - git clone http://github.com/mendersoftware/mendertesting
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    # Check commit compliance.
    - mendertesting/check_commits.sh
    # Check licenses
    - mendertesting/check_license.sh

test:acceptance:
  stage: test
  image: docker:18-dind
  tags:
    - mender-qa-slave
  dependencies:
    - build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - /usr/local/bin/dockerd-entrypoint.sh &
    - sleep 10
    - export DOCKER_HOST="unix:///var/run/docker.sock"
    - docker version
    - apk add git
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    - apk add python3 gcc openssh make openssl-dev libffi-dev libc-dev python3-dev
    - cd tests
    - pip3 install --upgrade -r requirements.txt
    - python3 -m pytest -v

# publish:s3:
#   stage: publish
#   image: debian:buster
#   dependencies:
#     - build
#   before_script:
#     - apt update && apt install -yyq awscli
#   script:
#     - echo "Publishing ${CI_COMMIT_REF_NAME} packages to S3"
#     - aws s3 cp $output/mender-client-master-1_amd64.deb
#         s3://$S3_BUCKET_NAME/${CI_COMMIT_REF_NAME}/${S3_BUCKET_PATH}/amd64/mender-client-master-1_amd64.deb
#     - aws s3api put-object-acl --acl public-read --bucket $S3_BUCKET_NAME
#         --key ${CI_COMMIT_REF_NAME}/${S3_BUCKET_PATH}/amd64/mender-client-master-1_amd64.deb
#   only:
#     - /^(master|[0-9]+\.[0-9]+\.x)$/
