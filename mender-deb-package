#/bin/bash

set -ex

show_help_and_exit() {
  cat << EOF

Usage: $0

NOTE: The script expects an /output directory where to store the generated packages. If
running it from a container, create a volume for such directory

EOF
  exit 1
}

if [ ! -d "/output" ]; then
  echo "Error: /output directory doesn't exist"
  show_help_and_exit
fi

# Create a version from VCS. For master, generate something like 0.0~git20191022.dade697
version=$(git describe --tags --exact-match 2>/dev/null || git log -1 --pretty=0.0~git%cd.%h --date format:%Y%m%d)-1

# Select the correct Debian recipe according to the minor version of Mender
debian_recipe="debian-master";
if echo $version | egrep '^[0-9]+\.[0-9]+\.[0-9](b[0-9]+)?(-build[0-9]+)?-1$'; then
    branch=$(echo $version | sed -E 's/\.[^.]+$/.x/')
    if [ -d "debian-${branch}" ]; then
        debian_recipe="debian-${branch}"
    fi
fi
mv $debian_recipe debian

#TODO: find a way to take this from the Changelog itself
dch --create -v ${version} --package mender-client "Release ${version}. See online docs for Changelog"

# Native build (amd64)
dpkg-buildpackage -us -uc -b

# ARM 32bit build (custom toolchain to support ARMv6)
CROSS_COMPILE="arm-buildroot-linux-gnueabihf" \
CC="$CROSS_COMPILE-gcc" \
PATH="$PATH:/armv6-eabihf--glibc--stable-2018.11-1/bin" \
CGO_CFLAGS="-idirafter /usr/include/" \
CGO_LDFLAGS="-L/usr/lib/arm-linux-gnueabihf/" \
GOARCH=arm \
GOARM=6 \
dpkg-buildpackage -aarmhf -us -uc -b

# ARM 64bit build (Debian toolchain)
CROSS_COMPILE="aarch64-linux-gnu" \
CC="$CROSS_COMPILE-gcc" \
GOARCH=arm64 \
dpkg-buildpackage -aarm64 -us -uc -b

# Copy package files to /output
for file in $(find ../ -maxdepth 1 -type f); do
  cp ${file} /output
done

# Echo the package version to /output
echo ${version} > /output/mender-client-deb-version
